FROM mattrayner/lamp:latest-1604
RUN apt-get -y remove php*-snmp
MAINTAINER Martin Sarsale <martin@properati.com>


ENV DEBIAN_FRONTEND noninteractive
ENV TERM xterm

ENV DATAWRAPPER_ROOT_DIRECTORY /var/www/datawrapper
ENV DATAWRAPPER_PLUGINS_DIRECTORY $DATAWRAPPER_ROOT_DIRECTORY/plugins
ENV DATAWRAPPER_WWW_DIRECTORY $DATAWRAPPER_ROOT_DIRECTORY/www
ENV DATAWRAPPER_WWW_CHART_DIRECTORY $DATAWRAPPER_ROOT_DIRECTORY/charts/static

# enable mod_rewrite
RUN a2enmod rewrite


RUN add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main universe restricted multiverse"
RUN apt-get update -yq --fix-missing && \
    apt-get install -y software-properties-common \
                       python-software-properties \
                       build-essential \
                       curl git python-pip nodejs npm && \
                       pip install envtpl

WORKDIR $DATAWRAPPER_ROOT_DIRECTORY
RUN curl -s -L https://github.com/datawrapper/datawrapper/archive/v1.10.1.tar.gz | tar xz --strip-components=1
RUN git clone https://github.com/properati/publish-embed.git $DATAWRAPPER_PLUGINS_DIRECTORY/publish-embed
RUN git clone https://github.com/properati/datawrapper-plugin-publish-rsync.git $DATAWRAPPER_PLUGINS_DIRECTORY/publish-rsync


# php config is generated at startup time to provide customizable sql credentials and settings.

RUN curl  -sS https://getcomposer.org/installer | php
RUN php composer.phar install
RUN ln -s /usr/bin/nodejs /usr/bin/node
RUN npm install 
RUN npm install -g grunt 
RUN grunt
RUN cp www/static/vendor/queue-async/queue.js www/static/vendor/queue-async/queue.min.js

#RUN chown -R www-data:www-data $DATAWRAPPER_ROOT_DIRECTORY/charts
#RUN chown -R www-data:www-data $DATAWRAPPER_ROOT_DIRECTORY/tmp

#do the stuff in the makefile, particularly related to grunt and stuffs.
#RUN npm install
#RUN cd dw.js && npm install
#RUN make clean && make all

#fuck the grunt stuff, just pretend we minified, handle this later.
#RUN cp www/static/js/dw-2.0.js www/static/js/dw-2.0.min.js

# final installation steps require sql to be present and running, this is done in startup.sh, 
# which is generated by startup_generator.sh
# RUN rm /var/www/html && ln -s $DATAWRAPPER_ROOT_DIRECTORY /var/www/html

ADD templates/ /tmp/templates
ADD scripts/startup_generator.sh /tmp/startup_generator.sh
RUN chmod a+x /tmp/startup_generator.sh
RUN (head -n -1 /start-mysqld.sh; echo "/tmp/startup_generator.sh &"; tail -n 1 /start-mysqld.sh) > /start-mysqld2.sh && mv /start-mysqld2.sh /start-mysqld.sh && chmod a+x /start-mysqld.sh

